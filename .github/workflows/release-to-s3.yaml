name: Release to S3

on:
  push:
    branches:
      - master
  pull_request:

env:
  ROOT_ACCOUNT: "765419416634"

permissions:
  id-token: write
  contents: read
  pull-requests: write
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 'pypy-3.8'
    
    - name: determine if push to S3 is required
      id: getdiff
      run: |    
        git diff --name-only HEAD^ HEAD
        if git diff --name-only HEAD^ HEAD | grep -v "^\." | grep "/" | cut -f1 -d"/"| uniq | grep "input-" ; then
          echo "::set-output name=result::true"
        fi
    
    - name: Install dependencies
      if: steps.getdiff.outputs.result == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: configure aws credentials
      if: steps.getdiff.outputs.result == 'true'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ env.ROOT_ACCOUNT }}:role/ControlTowerCustomizationPipelineUploadS3
        role-session-name: ControlTowerCustomizationPipelineUploadS3
        aws-region: us-east-1

    - name: Checkov
      if: steps.getdiff.outputs.result == 'true'
      id: checkov
      run: |
        if CHECKOV_OUTPUT=$(checkov -d input-cf-templates --external-checks-dir policies --quiet --framework cloudformation); then
          echo "::set-output name=result::true"
        else
          echo "::set-output name=result::false"
        fi
        echo "$CHECKOV_OUTPUT"
        echo "CHECKOV_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "$CHECKOV_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Build
      if: steps.getdiff.outputs.result == 'true'
      id: build
      run: |
        if BUILD_OUTPUT=$(aws_control_tower_manifest_builder \
                --default-region us-east-1 \
                --input-cf input-cf-templates \
                --input-scp input-scps \
                --abort-if-error TRUE \
                --output .) ; then 
          echo "::set-output name=result::true"
        else
          echo "::set-output name=result::false"
        fi
        echo "$BUILD_OUTPUT"
        echo "$BUILD_OUTPUT"
        echo "BUILD_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "$BUILD_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Update Pull Request with Build Result
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
          CHECKOV: "${{ env.CHECKOV_OUTPUT }}"
          BUILD: "${{ steps.build.outputs.output }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Keep spaces below closing details
        script: |
          const output = `#### Manifest Builder \`${{ steps.build.outcome }}\`
          <details><summary>Manifest Builder Results</summary>
            \`\`\`${process.env.BUILD}\`\`\`
            </details>

          #### Checkov \`${{ steps.checkov.outcome }}\`
          <details><summary>Show Checkov Results</summary>
            \`\`\`${process.env.CHECKOV}\`\`\`
            </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Exit on Checkov and Manifest Builder Failure
      if: steps.build.outputs.result == 'false' || steps.checkov.outputs.result == 'false'
      run: |
        echo "${{ steps.checkov.outputs.output }}"
        echo "${{ steps.build.outputs.output }}"
        exit 1

    - name: Publish to s3
      if:  steps.getdiff.outputs.result == 'true' && github.event_name == 'push'
      run: |
        zip -r custom-control-tower-configuration.zip manifest.yaml input-cf-templates input-scps
        aws s3 cp custom-control-tower-configuration.zip  s3://custom-control-tower-configuration-"$ROOT_ACCOUNT"-us-east-1/